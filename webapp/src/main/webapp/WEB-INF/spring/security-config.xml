<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="
                http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security-4.0.xsd">

    <http realm="Protected timerseries API"
          use-expressions="true"
          auto-config="false"
          create-session="stateless"
          entry-point-ref="unauthorizedEntryPoint"
          authentication-manager-ref="authenticationManager">
        <csrf disabled="true"></csrf>
        <custom-filter ref="authenticationTokenProcessingFilter" position="FORM_LOGIN_FILTER"/>
        <!-- endpoint permit for all -->
        <intercept-url pattern="/api/token/**" access="permitAll"/>
        <!-- endpoint only for users with role supervisor -->
        <intercept-url pattern="/api/v1/services" access="hasRole('ROLE_SUPERVISOR')"/>
        <!-- the remaining endpoints allowed for all authenticated users -->
        <intercept-url pattern="/**" access="authenticated"/>
    </http>

    <beans:bean id="unauthorizedEntryPoint" class="org.n52.security.UnauthorizedEntryPoint"/>

    <!--<authentication-manager id="authenticationManager">
        <authentication-provider user-service-ref="userDetailService">
        </authentication-provider>
    </authentication-manager>

    <user-service id="userDetailService">
        <user name="jan" password="jan" authorities="ROLE_USER, ROLE_ADMIN"/>
        <user name="horst" password="horst" authorities="ROLE_USER"/>
    </user-service>

    <beans:bean class="org.n52.security.AuthenticationTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <beans:constructor-arg ref="userDetailService"/>
    </beans:bean>

    <beans:bean class="org.n52.security.TokenController">
        <beans:property name="userService" ref="userDetailService"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>-->

    <ldap-server ldif="classpath:users.ldif"/>

    <authentication-manager id="authenticationManager">
        <ldap-authentication-provider
            group-search-filter="member={0}"
            group-search-base="ou=groups"
            user-search-base="ou=people"
            user-search-filter="uid={0}"
        />
        <authentication-provider ref='ldapProvider' />
    </authentication-manager>

    <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <beans:constructor-arg value="ldap://localhost:33389/dc=springframework,dc=org"/>
    </beans:bean>

    <beans:bean id="ldapProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.security.ldap.authentication.BindAuthenticator">
                <beans:constructor-arg ref="contextSource" />
                <beans:property name="userSearch" ref="userSearch"/>
            </beans:bean>
        </beans:constructor-arg>
        <beans:constructor-arg ref="authoritiesPopulator">
        </beans:constructor-arg>
    </beans:bean>

    <beans:bean id="authoritiesPopulator" class="org.springframework.security.ldap.userdetails.DefaultLdapAuthoritiesPopulator">
        <beans:constructor-arg ref="contextSource" />
        <beans:constructor-arg value="ou=groups" />
        <beans:property name="groupSearchFilter" value="(member={0})"/>
        <beans:property name="rolePrefix" value="ROLE_"/>
        <beans:property name="searchSubtree" value="true"/>
        <beans:property name="convertToUpperCase" value="true"/>
    </beans:bean>

    <beans:bean id="userSearch" class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <beans:constructor-arg index="0" value="ou=people"/>
        <beans:constructor-arg index="1" value="(uid={0})"/>
        <beans:constructor-arg index="2" ref="contextSource" />
    </beans:bean>

    <beans:bean class="org.n52.security.ldap.AuthenticationLDAPTokenProcessingFilter" id="authenticationTokenProcessingFilter">
        <beans:property name="userSearch" ref="userSearch"/>
        <beans:property name="authoritiesPopulator" ref="authoritiesPopulator"/>
    </beans:bean>

    <beans:bean class="org.n52.security.ldap.TokenLDAPController">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

</beans:beans>
